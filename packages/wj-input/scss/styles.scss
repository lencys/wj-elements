@import "../../scss/themes/net-basic/important.scss";

/*
[ Input ]
*/

:host {
  --wj-input-font-family: #{$base-font-family};
  --wj-input-background-color: #{$color-contrast-lowest};
  --wj-input-color: #{$color-contrast-higher};
  --wj-input-color-invalid: #{$color-danger-dark};
  --wj-input-border-color: #{$color-border-a};
  --wj-input-border-color-focus: #{$color-primary};
  --wj-input-border-radius: 2px;
  --wj-input-margin-bottom: .5rem;
  --wj-input-line-height: 20px;
  width: 100%;
  margin-bottom: var(--wj-input-margin-bottom);
  display: block;
  .error-message {
    display: none;
    position: absolute;
    width: auto;
    max-width: 100%;
    min-width: 60%;
    border-radius: 50px;
    background: black;
    padding: .25rem .5rem;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 12px;
    line-height: normal;
  }
  input {
    background-color: var(--wj-input-background-color);
    border: 1px solid var(--wj-input-border-color);
    font-family: var(--wjinput-font-family);
    color: var(--wj-input-color);
    border-top-color: fade($color-contrast-higher, 21%);
    appearance: none;
    outline: 0;
    padding: 6px 8px;
    line-height: var(--wj-input-line-height);
    font-size: 14px;
    font-weight: normal;
    vertical-align: middle;
    min-height: 32px;
  }
  .native-input {
    display: grid;
    grid-template-columns: auto 1fr auto;
    .input-wrapper {
      width: 100%;
    }
    &.default {
      background-color: var(--wj-input-background-color);
      font-family: var(--wj-input-font-family);
      position: relative;
      border-radius: var(--wj-input-border-radius);
      border: 1px solid var(--wj-input-border-color);
      border-top-color: darken($color-border-a, 10%);
      padding-inline: 9px;
      padding-top: 5px;
      padding-bottom: 4px;
      //width: 100%;
      transition: background-color 0.2s ease;
      cursor: text;
      &.focused {
        border: 1px solid var(--wj-input-border-color-focus) !important;
        label {
          opacity: 0.67;
          font-size: 12px;
          letter-spacing: normal;
        }
      }
      input {
        border: none;
        height: 25px;
        min-height: 25px;
        padding: 0;
        margin-top: -4px;
        background: none;
        box-shadow: none;
        width: 100%;
      }
      label {
        margin: 0;
        display: block;
        opacity: 1;
        cursor: text;
        transition: opacity 0.2s ease;
        line-height: var(--wj-input-line-height);
        &.fade {
          opacity: 0.5;
          font-size: 12px;
          letter-spacing: normal;
        }
      }
    }
  }
}
:host([required]) .input-wrapper::after {
  color: #D83C31;
  content: "*";
  font-family: -apple-system, BlinkMacSystemFont, "Inter UI", "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-size: 20px;
  position: absolute;
  right: 10px;
  top: 2px;
}
:host([invalid]) {
  .error-message {
    display: block;
  }
  label {
    opacity: 1 !important;
    color: var(--wj-input-color-invalid) !important;
    animation-name: shake;
    animation-duration: 0.4s;
    animation-iteration-count: 1;
  }
}

slot[name="start"], slot[name="end"] {
  display: flex;
  align-items: center;
  position: relative;
}
slot[name="start"] {
  //border-right: 1px solid rgba(0, 0, 0, 0.16);
  margin-inline: 0 10px;
}
slot[name="end"] {
  //border-left: 1px solid rgba(0, 0, 0, 0.16);
  margin-inline: 10px 0;
}
::slotted([slot="start"]) {
  padding-inline: 0 10px;
  &:after {
    border-right: 1px solid rgba(0, 0, 0, 0.16);
    content: "";
    display: block;
    width: 1px;
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
  }
}

::slotted([slot="end"]) {
  padding-inline: 10px 0;
  &:after {
    border-right: 1px solid rgba(0, 0, 0, 0.16);
    content: "";
    display: block;
    width: 1px;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

@keyframes shake {
  8%,
  41% {
    transform: translateX(-4px);
  }
  25%,
  58% {
    transform: translateX(4px);
  }
  75% {
    transform: translateX(-2px);
  }
  92% {
    transform: translateX(2px);
  }
  0%,
  100% {
    transform: translateX(0);
  }
}